shiny::runApp()
?tempfile
library(shiny); runApp('C:/Users/Administrator/Desktop/test.R')
install.packages(shinyFiles)
install.packages("C:/Users/Administrator/Desktop/shinyFiles_0.7.2.tar.gz", repos = NULL, type = "source")
library(shinyFiles)
runApp('C:/Users/Administrator/Desktop/test.R')
? getVolumes
?parseFilePaths
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
?observe
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
?reactive
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('E:/GitHub/test/testv222')
runApp('E:/GitHub/test/testv222')
runApp('C:/Users/Administrator/Desktop/test.R')
runApp('C:/Users/Administrator/Desktop/test.R')
?observeEvent
runApp('C:/Users/Administrator/Desktop/Seed-master/Seed-master')
install.packages("C:/Users/Administrator/Desktop/Seed-master.zip", repos = NULL, type = "win.binary")
runApp()
shiny::runApp()
refFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\hg19sub.fa"
indexDir <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\indexFile"
tmp <- bowtie_build(references=refFiles, outdir=indexDir, prefix="index", force=TRUE)
head(tmp)
tail(tmp)
tmp[1]
tmp[2]
indexDir <- tempdir()
bowtie_build(references=refFiles, outdir=indexDir, prefix="index", force=TRUE)
indexDir
bowtie(sequences=readsFiles,
index=file.path(indexDir, "index"),
outfile = samFiles,type = "single",S=TRUE,
f=TRUE, n=0, force=TRUE)
readsFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\probeseq.fa"
bowtie(sequences=readsFiles,
index=file.path(indexDir, "index"),
outfile = samFiles,type = "single",S=TRUE,
f=TRUE, n=0, force=TRUE)
samFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\alignment.sam"
bowtie(sequences=readsFiles,
index=file.path(indexDir, "index"),
outfile = samFiles,type = "single",S=TRUE,
f=TRUE, n=0, force=TRUE)
runApp()
BiocManager::install("Sushi", version = "3.8")
browseVignettes(shushi)
browseVignettes("Shushi")
browseVignettes("sushi")
browseVignettes("Sushi")
runApp()
runApp()
refFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\hg19sub.fa"
indexDir <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\indexFile"
indexDir <- tempdir()
tmp <- bowtie_build(references=refFiles, outdir=indexDir, prefix="index", force=TRUE)
head(tmp)
readsFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\probeseq.fa"
samFiles <- "C:\\Users\\Administrator\\Desktop\\testBowtie\\alignment.sam"
bowtie(sequences=readsFiles,
index=file.path(indexDir, "index"),
outfile = samFiles,type = "single",S=TRUE,
f=TRUE, n=0, force=TRUE)
bamtemp <- tempdir()
bamtemp <- tempdir()
bamFile <- Rsamtools::asBam(file = samFiles, destination = bamtemp, overwrite = T)
bam <- scanBam(bamFile)
tmp=as.data.frame(do.call(cbind,lapply(bam[[1]], as.character)),stringsAsFactors = F)
tmp=tmp[tmp$flag!=4,]
tmp$end=as.numeric(tmp$pos)+as.numeric(tmp$qwidth)
#create .bam GRanges Objects
my_seq <- with(tmp, GRanges(as.character(rname),
IRanges(as.numeric(pos), end),
as.character(strand),
id = as.character(qname)))
my_seq
View(tmp)
plotBed(my_seq)
seqBed <- data.frame(chr = tmp$rname, start = tmp$pos,end=tmp$end)
View(seqBed)
plotBed(seqBed)
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
chrom = "chr1"
chromstart = 241
chromend = 421
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
plotBed(seqBed,chrom = chrom,chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
colorbycol = SushiColors(2),row = "auto",wiggle=0.001)
chrom = "chr1"
chromstart = 1
chromend = 2000
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
plotBed(seqBed,chrom = chrom,chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
colorbycol = SushiColors(2),row = "auto",wiggle=0.001)
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
plotBed(seqBed,chrom = c("chr1","chr2","chr3"),chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
colorbycol = SushiColors(2),row = "auto",wiggle=0.001)
?plotBed
chromstart = 1
chromend = 40000
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
plotBed(seqBed,chrom = c("chr1","chr2","chr3"),chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
# colorbycol = SushiColors(2),
row = "auto",wiggle=0.001)
data(Sushi_ChIPSeq_severalfactors.bed)
chrom            = "chr15"
chromstart      = 72800000
chromend         = 73100000
Sushi_ChIPSeq_severalfactors.bed$color = heat.colors(max(Sushi_ChIPSeq_severalfactors.bed$row))[Sushi_ChIPSeq_severalfactors.bed$row]
plotBed(beddata    = Sushi_ChIPSeq_severalfactors.bed,chrom = chrom,chromstart = chromstart,chromend =chromend,
rownumber  = Sushi_ChIPSeq_severalfactors.bed$row, type = "circles",color=Sushi_ChIPSeq_severalfactors.bed$color,row="given",plotbg="grey95",
rowlabels=unique(Sushi_ChIPSeq_severalfactors.bed$name),rowlabelcol=unique(Sushi_ChIPSeq_severalfactors.bed$color),rowlabelcex=0.75)
Sushi_ChIPSeq_severalfactors.bed$color = heat.colors(max(Sushi_ChIPSeq_severalfactors.bed$row))[Sushi_ChIPSeq_severalfactors.bed$row]
plotBed(beddata    = Sushi_ChIPSeq_severalfactors.bed,chrom = chrom,chromstart = chromstart,chromend =chromend,
rownumber  = Sushi_ChIPSeq_severalfactors.bed$row, type = "region",color=Sushi_ChIPSeq_severalfactors.bed$color,row="given",plotbg="grey95",
rowlabels=unique(Sushi_ChIPSeq_severalfactors.bed$name),rowlabelcol=unique(Sushi_ChIPSeq_severalfactors.bed$color),rowlabelcex=0.75)
colors = c("dodgerblue1","firebrick2","violet","yellow",
"dodgerblue1","firebrick2","violet","yellow",
"dodgerblue1","firebrick2","violet")
plotBed(beddata    = Sushi_ChIPSeq_severalfactors.bed,chrom = chrom,chromstart = chromstart,chromend =chromend,
rownumber  = Sushi_ChIPSeq_severalfactors.bed$row, type = "density",row="supplied",
rowlabels=unique(Sushi_ChIPSeq_severalfactors.bed$name),rowlabelcol=colors,rowlabelcex=0.75,
palettes=list(
colorRampPalette(c("black",colors[1])),
colorRampPalette(c("black",colors[2])),
colorRampPalette(c("black",colors[3])),
colorRampPalette(c("black",colors[4])),
colorRampPalette(c("black",colors[5])),
colorRampPalette(c("black",colors[6])),
colorRampPalette(c("black",colors[7])),
colorRampPalette(c("black",colors[8])),
colorRampPalette(c("black",colors[9])),
colorRampPalette(c("black",colors[10])),
colorRampPalette(c("black",colors[11]))))
chrom = "chr1"
chromstart = 1
chromend = 40000
seqBed <- data.frame(chrom = tmp$rname, start = tmp$pos,end=tmp$end)
plotBed(seqBed,chrom = c("chr1","chr2","chr3"),chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
# colorbycol = SushiColors(2),
row = "auto",wiggle=0.001)
plotBed(seqBed,chrom = c("chr1"),chromstart = chromstart,
chromend =chromend,#colorby = Sushi_ChIPSeq_pol2.bed$strand,
# colorbycol = SushiColors(2),
row = "auto",wiggle=0.001)
